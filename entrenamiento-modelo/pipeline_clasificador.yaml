# PIPELINE DEFINITION
# Name: pipeline-clasificador-solicitudes
components:
  comp-entrenar-modelo:
    executorLabel: exec-entrenar-modelo
  comp-evaluar-modelo:
    executorLabel: exec-evaluar-modelo
  comp-generar-datos:
    executorLabel: exec-generar-datos
  comp-subir-modelo-s3:
    executorLabel: exec-subir-modelo-s3
deploymentSpec:
  executors:
    exec-entrenar-modelo:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - entrenar_modelo
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef entrenar_modelo():\n    import pandas as pd\n    import joblib\n\
          \    from sklearn.model_selection import train_test_split\n    from sklearn.feature_extraction.text\
          \ import TfidfVectorizer\n    from sklearn.linear_model import LogisticRegression\n\
          \    from sklearn.pipeline import Pipeline\n    df = pd.read_csv('data/solicitudes_ciudadanas_pba.csv')\n\
          \    X = df['texto_solicitud']\n    y = df['departamento_destino']\n   \
          \ X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,\
          \ random_state=42, stratify=y)\n    modelo_pipeline = Pipeline([\n     \
          \   ('tfidf', TfidfVectorizer(max_features=5000, ngram_range=(1,2), lowercase=True)),\n\
          \        ('clasificador', LogisticRegression(random_state=42, max_iter=1000,\
          \ class_weight='balanced'))\n    ])\n    modelo_pipeline.fit(X_train, y_train)\n\
          \    os.makedirs('models', exist_ok=True)\n    joblib.dump(modelo_pipeline,\
          \ 'models/clasificador_solicitudes_pba_v1.pkl')\n    print(\"\u2705 Modelo\
          \ entrenado y guardado\")\n\n"
        image: registry.access.redhat.com/ubi9/python-3.11
    exec-evaluar-modelo:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - evaluar_modelo
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef evaluar_modelo():\n    import pandas as pd\n    import joblib\n\
          \    from sklearn.metrics import accuracy_score, precision_recall_fscore_support\n\
          \    df = pd.read_csv('data/solicitudes_ciudadanas_pba.csv')\n    X = df['texto_solicitud']\n\
          \    y = df['departamento_destino']\n    modelo_pipeline = joblib.load('models/clasificador_solicitudes_pba_v1.pkl')\n\
          \    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2,\
          \ random_state=42, stratify=y)\n    y_pred = modelo_pipeline.predict(X_test)\n\
          \    accuracy = accuracy_score(y_test, y_pred)\n    precision, recall, f1,\
          \ _ = precision_recall_fscore_support(y_test, y_pred, average='weighted')\n\
          \    print(f\"Precisi\xF3n: {accuracy:.3f}, Precision: {precision:.3f},\
          \ Recall: {recall:.3f}, F1: {f1:.3f}\")\n\n"
        image: registry.access.redhat.com/ubi9/python-3.11
    exec-generar-datos:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - generar_datos
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef generar_datos():\n    import os\n    from generar_dataset import\
          \ GeneradorSolicitudesCiudadanas\n    import pandas as pd\n    os.makedirs('data',\
          \ exist_ok=True)\n    generador = GeneradorSolicitudesCiudadanas()\n   \
          \ df = generador.generar_dataset(5000)\n    df.to_csv('data/solicitudes_ciudadanas_pba.csv',\
          \ index=False)\n    print(\"\u2705 Dataset generado y guardado\")\n\n"
        image: registry.access.redhat.com/ubi9/python-3.11
    exec-subir-modelo-s3:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - subir_modelo_s3
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.2'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"\
          $0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef subir_modelo_s3():\n    import os\n    import boto3\n    aws_access_key_id\
          \ = os.getenv('AWS_ACCESS_KEY_ID')\n    aws_secret_access_key = os.getenv('AWS_SECRET_ACCESS_KEY')\n\
          \    endpoint_url = os.getenv('S3_ENDPOINT_URL')\n    bucket_name = os.getenv('S3_BUCKET_NAME')\n\
          \    object_name = \"modelos/clasificador_solicitudes_pba_v1.pkl\"\n   \
          \ local_path = \"models/clasificador_solicitudes_pba_v1.pkl\"\n    s3 =\
          \ boto3.client(\n        's3',\n        aws_access_key_id=aws_access_key_id,\n\
          \        aws_secret_access_key=aws_secret_access_key,\n        endpoint_url=endpoint_url\n\
          \    )\n    s3.upload_file(local_path, bucket_name, object_name)\n    print(f\"\
          \u2705 Modelo guardado en S3: s3://{bucket_name}/{object_name}\")\n\n"
        image: registry.access.redhat.com/ubi9/python-3.11
pipelineInfo:
  name: pipeline-clasificador-solicitudes
root:
  dag:
    tasks:
      entrenar-modelo:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-entrenar-modelo
        taskInfo:
          name: entrenar-modelo
      evaluar-modelo:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-evaluar-modelo
        taskInfo:
          name: evaluar-modelo
      generar-datos:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-generar-datos
        taskInfo:
          name: generar-datos
      subir-modelo-s3:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-subir-modelo-s3
        taskInfo:
          name: subir-modelo-s3
schemaVersion: 2.1.0
sdkVersion: kfp-2.14.2
